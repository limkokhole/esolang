#!/usr/bin/expect -f
spawn ../../COMPILAC -q -seed 1 ./advent.i /tmp/adb.i
# Test various verbs.  Eat, drink, pour, rub.
set axe 0
set closed 0
set die 0
set pirate 0
set last_cmd ""
set resp none
proc cmd command {
	upvar #0 closed closed
	if {$closed eq 1} {
		return
	}
	upvar #0 die die
	if {$die eq 2} {
		return
	}
	upvar #0 resp resp
	expect {
		$resp {
			set resp none
			exp_continue
		}
		"PLEASE ANSWER THE QUESTION." {
			expect "\n>"
			puts "FAILED UNEXPECTED STATE"
			exit
		}
		"THERE IS A LITTLE AXE HERE" {
			upvar #0 axe axe
			switch $axe {
				no {
				}
				1 {
				}
				default {
					expect "\n>"
					send "get axe\n"
					expect "OK"
				}
			}
			exp_continue
		}
		"DWARF WITH A BIG KNIFE BLOCKS" {
			upvar #0 axe axe
			upvar #0 last_cmd last_cmd
			switch $axe {
				no {
					exp_continue
				}
				1 {
					expect "\n>"
					puts "FAILED BLOCKED BY DWARF"
					exit
				}
				default {
					expect "\n>"
					send "throw axe\n"
					expect "\n>"
					send "get axe\n"
					expect "\n>"
					send "${last_cmd}\n"
				}
			}
			exp_continue
		}
		"THREATENING LITTLE DWARVES" {
			upvar #0 axe axe
			switch $axe {
				no {
					exp_continue
				}
				1 {
					exp_continue
				}
				default {
					expect "\n>"
					send "throw axe\n"
					expect "\n>"
					send "get axe\n"
					expect "\n>"
					send "throw axe\n"
					exp_continue
				}
			}
		}
		"THREATENING LITTLE DWARF" {
			upvar #0 axe axe
			switch $axe {
				no {
					exp_continue
				}
				1 {
					exp_continue
				}
				default {
					expect "\n>"
					send "throw axe\n"
					expect "DWARF*\n>"
					send "get axe\n"
					expect "OK"
					exp_continue
				}
			}
		}
		"REINCARNAT" {
			upvar #0 die die
			switch $die {
				1 {
					set die 2
					exp_continue
				}
				default {
					expect "\n>"
					send "no\n"
					expect "POINT*.\n"
					puts "FAILED UNEXPECTED DEATH"
					exit
				}
			}
		}
		"THE CAVE IS NOW CLOSED" {
			upvar #0 closed closed
			set closed 1
		}
		"HAR, HAR" {
			upvar #0 pirate pirate
			switch $pirate {
				1 {
					set pirate 2
					exp_continue
				}
				default {
					expect "\n>"
					send "quit\n"
					expect "\n>"
					send "y\n"
					expect "POINT*.\n"
					puts "FAILED UNEXPECTED PIRATE"
					exit
				}
			}
		}
		"\n>" {
			if {$resp ne "none"} {
				puts "FAILED $resp"
				exit
			}
			upvar #0 last_cmd last_cmd
			set last_cmd $command
			send "${command}\n"
		}
	}
}
cmd no
cmd in
cmd "throw food"
set resp "YOU AREN'T CARRYING IT"
cmd "get lamp"
cmd on
cmd out
cmd "throw lamp"
cmd look
set resp "THERE IS A LAMP SHINING NEARBY"
cmd get
cmd in
cmd eat
set resp "THANK YOU, IT WAS DELICIOUS"
cmd eat
set resp "EAT WHAT"
cmd "get bottle"
cmd xyzzy
cmd eat
cmd "eat rod"
set resp "DON'T BE RIDICULOUS"
cmd w
cmd w
cmd eat
cmd "eat bird"
set resp "I THINK I JUST LOST MY APPETITE"
cmd pour
set resp "YOUR BOTTLE IS EMPTY"
cmd pour
set resp "POUR WHAT"
cmd e
cmd e
cmd xyzzy
cmd plugh
cmd s
cmd d
cmd w
cmd d
cmd w
cmd w
cmd w
cmd d
cmd "get oil"
cmd u
cmd w
cmd d
cmd "pour bottle"
set resp "THE PLANT INDIGNANTLY SHAKES THE OIL OFF ITS LEAVES"
cmd u
cmd e
cmd d
cmd "get oil"
cmd pour
set resp "YOUR BOTTLE IS EMPTY"
cmd "pour oil"
set resp "YOU AREN'T CARRYING IT"
cmd "pour lamp"
set resp "YOU CAN'T POUR THAT"
cmd drink
set resp "DRINK WHAT"
cmd "drink lamp"
set resp "DON'T BE RIDICULOUS"
cmd u
cmd w
cmd w
cmd u
cmd n
cmd n
cmd drink
set resp "YOU HAVE TAKEN A DRINK FROM THE STREAM"
cmd "get water"
cmd drink
set resp "THE BOTTLE OF WATER IS NOW EMPTY"
cmd rub
set resp "RUB WHAT"
cmd "rub lamp"
set resp "RUBBING THE ELECTRIC LAMP IS NOT PARTICULARLY REWARDING"
cmd "rub bottle"
set resp "NOTHING UNEXPECTED HAPPENS"
cmd "find lamp"
set resp "YOU ARE ALREADY CARRYING IT"
cmd quit
cmd yes
expect "POINTS*\n"
puts SUCCESS
